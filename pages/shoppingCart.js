import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { useState } from 'react';
import Layout from '../components/Layout';
import styles from '../styles/Home.module.css';
import { getParsedCookie, setParsedCookie } from '../util/cookies';
import { getProducts } from '../util/database';

export default function ShoppingCart() {
  const cookieValue = getParsedCookie('addedProducts') || [];
  const [cart, setCart] = useState(cookieValue);

  // delete item from cart
  const deleteFromCart = (id) => {
    const newCookie = cart.filter((cookieObject) => {
      return cookieObject.id !== id;
    });

    setCart(newCookie);
    setParsedCookie('addedProducts', newCookie);
  };

  return (
    <Layout>
      <div className={styles.container}>
        <Head>
          <title>Shopping Cart</title>
          <meta name="description" content="Generated by create next app" />
        </Head>

        <main className={styles.grid}>
          {cookieValue.map((product) => (
            <div key={product.id}>
              <div className={styles.grid}>
                {/* Dynamic link, eg. /products/1, /products/2, etc */}
                <Link href={`/products/${product.id}`} passHref>
                  <a className={styles.card}>
                    {/* {product.name} */}
                    <Image
                      src={`/unfortunately-foxes/${product.id}.png`}
                      alt={product.name}
                      width="200"
                      height="200"
                    />
                  </a>
                </Link>{' '}
              </div>
              <div className={styles.deleteButton}>
                <button onClick={() => deleteFromCart(product.id)}>
                  Delete
                </button>
              </div>
            </div>
          ))}
        </main>
      </div>
    </Layout>
  );
}

export async function getServerSideProps(context) {
  const products = await getProducts();
  const addedProductsOnCookies = context.req.cookies.addedProducts || '[   ]';
  console.log('db', products);
  // if there is no addedProducts cookie on the browser we store to an [] otherwise we get the cookie value and parse it
  const addedProducts = JSON.parse(addedProductsOnCookies);
  // Important:
  // - Always return an object from getServerSideProps
  // - Always return a key in that object that is
  // called props

  // 1. get the cookies from the browser
  // 2. pass the cookies to the frontend
  return {
    props: {
      // In the props object, you can pass back
      // whatever information you want
      addedProducts: addedProducts,
      products: products,
    },
  };
}
